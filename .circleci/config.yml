version: 2.1

executors:
  docksal:
    docker:
      - image: docksal/cli:php8.0
        user: docker
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD

jobs:
  build:
    executor: docksal
    steps:
      - checkout
      - restore_cache:
          name: 'Node: restore cache'
          keys:
            - node-v0-app-{{ .Branch }}-{{ checksum "./htdocs/yarn.lock" }}
            - node-v0-app-{{ .Branch }}
      - run:
          name: 'Node: install dependencies'
          command: yarn
          working_directory: ./htdocs
          shell: /bin/bash -leo pipefail
      - save_cache:
          name: 'Node: save cache'
          key: node-v0-app-{{ .Branch }}-{{ checksum "./htdocs/yarn.lock" }}
          paths:
            - ./htdocs/node_modules
      - run:
          name: 'Node: build'
          command: '[ -f yarn.lock ] && yarn run build || echo "No yarn.lock available."'
          working_directory: ./htdocs
          shell: /bin/bash -leo pipefail
      - run:
          name: 'Generate: create artifact'
          command: '[ -f yarn.lock ] && tar -czf ../archive.tar.gz ./out || echo "No yarn.lock available."'
          working_directory: ./htdocs
      - store_artifacts:
          name: 'General: store artifact'
          path: ./archive.tar.gz
      - persist_to_workspace:
          root: ./htdocs
          paths:
            - ./out
  deploy:
    executor: docksal
    steps:
      - checkout
      - attach_workspace:
          at: ./htdocs
      - restore_cache:
          name: 'Composer: restore cache'
          keys:
            - composer-v0-app-{{ .Branch }}-{{ checksum "./composer.lock" }}
            - composer-v0-app-{{ .Branch }}
      - run:
          name: 'Composer: install dependencies'
          command: composer install --no-dev --prefer-dist --no-interaction --profile
      - save_cache:
          name: 'Composer: save cache'
          key: composer-v0-app-{{ .Branch }}-{{ checksum "./composer.lock" }}
          paths:
            - ./vendor
      - run:
          name: 'Deployer: deploy'
          command: ./vendor/bin/dep -f ./.circleci/lammensj.yml deploy --github-token=$GITHUB_TOKEN --target-repo=$TARGET_REPO --target-branch=$TARGET_BRANCH -vvv

workflows:
  liftoff:
    jobs:
      - build:
          filters:
            branches:
              only:
                - develop
                - main
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main
